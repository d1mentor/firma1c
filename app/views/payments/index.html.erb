<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <div class="collapse navbar-collapse" id="navbarNav" style="align-items: flex-start;">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/payments" id="export_name">Платежи</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">|</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Касса: <%= @kassa %> zl</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">|</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/choose_source_for_new_payment">Новый платёж</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#" id="export-btn">Экспорт в exel</a>
        </li> 
        <button class="bg-dark" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="nav-link active">Фильтр ></span>
        </button>
      </ul>
          <div class="collapse" id="navbarToggleExternalContent">
            <div class="container" style="margin-top: 10px;">
              <%= form_with url: "/payments", method: :get do |form| %>
                <div class="container">
                  <div class="row">
                    <div class="col-md-6">
                      <p style="color: white;">От:</p>
                    </div>
                    <div class="col-md-6">
                      <%= form.date_field "start_date" %>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6">
                      <p style="color: white;">До:</p>
                    </div>
                    <div class="col-md-6">
                      <%= form.date_field "end_date" %>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6">
                      <p style="color: white;">Тип платежа:</p>
                    </div>
                    <div class="col-md-6">
                     <%= select_tag "class", raw("<option>Приход</option><option>Расход</option>") , prompt: "Выбрать тип платежа", id: "class", name: "filter_payment_type" %>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6">
                      <p style="color: white;">Категория:</p>
                    </div>
                    <div class="col-md-6">
                      <%= select_tag "class", raw("<option>Worker</option><option>Customer</option><option>Supply</option><option>Transport</option><option>Instrument</option><option>Н/Д</option>") , prompt: "Выбрать категорию", id: "class", name: "category" %>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6">
                      <p style="color: white;">Назначение:</p>
                    </div>
                    <div class="col-md-6">
                      <%= select_tag "class", options_for_select(@sources.collect {|p| [ p['name'], p['name'] ] }) , prompt: "Выбрать Назначение", id: "class", name: "filter_source_id" %>
                    </div>
                  </div>
                </div>
              <div class="container text-center">
                <%= form.submit "Применить фильтр", class: "btn btn-success" %>
              </div>
              <% end %>
            </div>
        </div> 
    </div>
  </div>
</nav>

<div>
  <table class="table" id="table">
  <thead>
    <tr class="table-primary">
      <th scope="col">Дата</th>
      <th scope="col" data-type="number">Сумма</th>
      <th scope="col">Категория</th>
      <th scope="col">Назначение</th>
      <th scope="col">Комментарий</th>
      <th scope="col">...</th>
    </tr>
  </thead>
  <tbody>
    <% @payments.each do |payment| %>
      <%= render payment %>
    <% end %>
  </tbody>
  </table>
</div>

<p style="color: green"><%= notice %></p>

<script>      
  jQuery(document).ready(function() {
    
    $('#export-btn').on('click', function(e){
        e.preventDefault();
        ResultsToTable();
    });
    
    function ResultsToTable(){
        let date = new Date();
        let output = String(date.getDate()).padStart(2, '0') + '/' + String(date.getMonth() + 1).padStart(2, '0') + '/' + date.getFullYear();
        $("#table").table2excel({
            exclude: ".noExl",
            name: "Results",
            filename: `${document.getElementById('export_name').innerHTML}${output}`
        });
    }
  });

  $(document).ready(function() {
    const table = document.getElementById('table');
    const headers = table.querySelectorAll('th');
    const tableBody = table.querySelector('tbody');
    const rows = tableBody.querySelectorAll('tr');

    // Направление сортировки
    const directions = Array.from(headers).map(function(header) {
        return '';
    });

    // Преобразовать содержимое данной ячейки в заданном столбце
    const transform = function(index, content) {
        // Получить тип данных столбца
        const type = headers[index].getAttribute('data-type');
        switch (type) {
            case 'number':
                return parseFloat(content);
            case 'string':
            default:
                return content;
        }
    };

    const sortColumn = function(index) {
        // Получить текущее направление
        const direction = directions[index] || 'asc';

        // Фактор по направлению
        const multiplier = (direction === 'asc') ? 1 : -1;

        const newRows = Array.from(rows);

        newRows.sort(function(rowA, rowB) {
            const cellA = rowA.querySelectorAll('td')[index].innerHTML;
            const cellB = rowB.querySelectorAll('td')[index].innerHTML;

            const a = transform(index, cellA);
            const b = transform(index, cellB);    

            switch (true) {
                case a > b: return 1 * multiplier;
                case a < b: return -1 * multiplier;
                case a === b: return 0;
            }
        });

        // Удалить старые строки
        [].forEach.call(rows, function(row) {
            tableBody.removeChild(row);
        });

        // Поменять направление
        directions[index] = direction === 'asc' ? 'desc' : 'asc';

        // Добавить новую строку
        newRows.forEach(function(newRow) {
            tableBody.appendChild(newRow);
        });
    };

    [].forEach.call(headers, function(header, index) {
        header.addEventListener('click', function() {
            sortColumn(index);
        });
    });
});
  </script>